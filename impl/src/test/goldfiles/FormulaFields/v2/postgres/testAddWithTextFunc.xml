<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testAddWithTextFunc">
    <JsOutput highPrec="true" nullAsNull="false">(((($F.nvl(context.record.customnumber1__c,new $F.Decimal('0')).add($F.nvl((context.record.customtext1__c!=null)?($F.Decimal(context.record.customtext1__c)):null,new $F.Decimal('0')))).add($F.nvl(context.record.customnumber2__c,new $F.Decimal('0')))).add($F.nvl((new $F.Decimal(($F.anl([context.record.customtext2__c])?(new $F.Decimal(0)):(context.record.customtext2__c).length))),new $F.Decimal('0')))).add($F.nvl($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c.div(100)):null,new $F.Decimal('0')).mul($F.nvl(context.record.customcurrency1__c,new $F.Decimal('0'))),new $F.Decimal('0'))))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(((($F.nvl(context.record.customnumber1__c,0)+$F.nvl((context.record.customtext1__c!=null)?(Number(context.record.customtext1__c)):null,0))+$F.nvl(context.record.customnumber2__c,0))+$F.nvl(($F.anl([context.record.customtext2__c])?0:(context.record.customtext2__c).length),0))+$F.nvl($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c/100.0):null,0)*$F.nvl(context.record.customcurrency1__c,0),0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.custompercent1__c!=null&amp;&amp;context.record.custompercent1__c/100.0!=null&amp;&amp;context.record.customcurrency1__c!=null&amp;&amp;context.record.customtext1__c!=null&amp;&amp;context.record.customnumber1__c!=null&amp;&amp;Number(context.record.customtext1__c)!=null&amp;&amp;context.record.customnumber2__c!=null&amp;&amp;($F.anl([context.record.customtext2__c])?0:(context.record.customtext2__c).length)!=null&amp;&amp;context.record.custompercent1__c/100.0*context.record.customcurrency1__c!=null)?(((((context.record.customnumber1__c+Number(context.record.customtext1__c))+context.record.customnumber2__c)+($F.anl([context.record.customtext2__c])?0:(context.record.customtext2__c).length))+context.record.custompercent1__c/100.0*context.record.customcurrency1__c)):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.custompercent1__c!=null&amp;&amp;context.record.custompercent1__c.div(100)!=null&amp;&amp;context.record.customcurrency1__c!=null&amp;&amp;context.record.customtext1__c!=null&amp;&amp;context.record.customnumber1__c!=null&amp;&amp;$F.Decimal(context.record.customtext1__c)!=null&amp;&amp;context.record.customnumber2__c!=null&amp;&amp;(new $F.Decimal(($F.anl([context.record.customtext2__c])?(new $F.Decimal(0)):(context.record.customtext2__c).length)))!=null&amp;&amp;context.record.custompercent1__c.div(100).mul(context.record.customcurrency1__c)!=null)?(((((context.record.customnumber1__c.add($F.Decimal(context.record.customtext1__c))).add(context.record.customnumber2__c)).add((new $F.Decimal(($F.anl([context.record.customtext2__c])?(new $F.Decimal(0)):(context.record.customtext2__c).length))))).add(context.record.custompercent1__c.div(100).mul(context.record.customcurrency1__c)))):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>((((COALESCE($!s0s!$.customnumber1__c, 0)+COALESCE(CAST($!s0s!$.customtext1__c AS NUMERIC), 0))+COALESCE($!s0s!$.customnumber2__c, 0))+COALESCE(COALESCE(LENGTH($!s0s!$.customtext2__c),0)::numeric, 0))+COALESCE((COALESCE(($!s0s!$.custompercent1__c / 100.0), 0) * COALESCE($!s0s!$.customcurrency1__c, 0)), 0))</Sql>
       <Guard>NOT REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0','g') ~ '^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$'</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>(((($!s0s!$.customnumber1__c+CAST($!s0s!$.customtext1__c AS NUMERIC))+$!s0s!$.customnumber2__c)+COALESCE(LENGTH($!s0s!$.customtext2__c),0)::numeric)+(($!s0s!$.custompercent1__c / 100.0) * $!s0s!$.customcurrency1__c))</Sql>
       <Guard>NOT REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0','g') ~ '^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$'</Guard>
    </SqlOutput>
</testCase>

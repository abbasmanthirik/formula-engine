<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testFloorUsesMinus">
    <JsOutput highPrec="true" nullAsNull="false">(($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c.div(100)):null,new $F.Decimal('0')).sub($F.nvl(context.record.customnumber1__c,new $F.Decimal('0')))).isPos()?($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c.div(100)):null,new $F.Decimal('0')).sub($F.nvl(context.record.customnumber1__c,new $F.Decimal('0')))).toDP(18).floor():($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c.div(100)):null,new $F.Decimal('0')).sub($F.nvl(context.record.customnumber1__c,new $F.Decimal('0')))).toDP(18).ceil())</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">((($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c/100.0):null,0)-$F.nvl(context.record.customnumber1__c,0)))&gt;=0?Math.floor(($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c/100.0):null,0)-$F.nvl(context.record.customnumber1__c,0))):Math.ceil(($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c/100.0):null,0)-$F.nvl(context.record.customnumber1__c,0))))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.custompercent1__c!=null&amp;&amp;context.record.custompercent1__c/100.0!=null&amp;&amp;context.record.customnumber1__c!=null)?((((context.record.custompercent1__c/100.0-context.record.customnumber1__c))&gt;=0?Math.floor((context.record.custompercent1__c/100.0-context.record.customnumber1__c)):Math.ceil((context.record.custompercent1__c/100.0-context.record.customnumber1__c)))):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.custompercent1__c!=null&amp;&amp;context.record.custompercent1__c.div(100)!=null&amp;&amp;context.record.customnumber1__c!=null)?(((context.record.custompercent1__c.div(100).sub(context.record.customnumber1__c)).isPos()?(context.record.custompercent1__c.div(100).sub(context.record.customnumber1__c)).toDP(18).floor():(context.record.custompercent1__c.div(100).sub(context.record.customnumber1__c)).toDP(18).ceil())):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN (COALESCE(($!s0s!$.custompercent1__c / 100.0), 0)-COALESCE($!s0s!$.customnumber1__c, 0))&gt;=0 THEN FLOOR(ROUND((COALESCE(($!s0s!$.custompercent1__c / 100.0), 0)-COALESCE($!s0s!$.customnumber1__c, 0)),33)) ELSE CEIL(ROUND((COALESCE(($!s0s!$.custompercent1__c / 100.0), 0)-COALESCE($!s0s!$.customnumber1__c, 0)),33)) END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN (($!s0s!$.custompercent1__c / 100.0)-$!s0s!$.customnumber1__c)&gt;=0 THEN FLOOR(ROUND((($!s0s!$.custompercent1__c / 100.0)-$!s0s!$.customnumber1__c),33)) ELSE CEIL(ROUND((($!s0s!$.custompercent1__c / 100.0)-$!s0s!$.customnumber1__c),33)) END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
</testCase>

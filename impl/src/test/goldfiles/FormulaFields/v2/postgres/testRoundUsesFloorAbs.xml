<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testRoundUsesFloorAbs">
    <JsOutput highPrec="true" nullAsNull="false">(($F.nvl(context.record.customnumber1__c,new $F.Decimal('0')).isPos()?$F.nvl(context.record.customnumber1__c,new $F.Decimal('0')).toDP(18).floor():$F.nvl(context.record.customnumber1__c,new $F.Decimal('0')).toDP(18).ceil())).mul('1e'+$F.nvl(context.record.customnumber2__c,new $F.Decimal('0')).abs().toFixed(0)).round().div('1e'+$F.nvl(context.record.customnumber2__c,new $F.Decimal('0')).abs().toFixed(0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(Math.abs($F.nvl(context.record.customnumber2__c,0))&gt;0)?Number(Number((($F.nvl(context.record.customnumber1__c,0))&gt;=0?Math.floor($F.nvl(context.record.customnumber1__c,0)):Math.ceil($F.nvl(context.record.customnumber1__c,0)))).toFixed(Math.abs($F.nvl(context.record.customnumber2__c,0))&lt;=20?Math.abs($F.nvl(context.record.customnumber2__c,0)):20)):Math.round(((($F.nvl(context.record.customnumber1__c,0))&gt;=0?Math.floor($F.nvl(context.record.customnumber1__c,0)):Math.ceil($F.nvl(context.record.customnumber1__c,0))))*('1e'+Math.abs($F.nvl(context.record.customnumber2__c,0))))/('1e'+Math.abs($F.nvl(context.record.customnumber2__c,0)))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customnumber2__c!=null&amp;&amp;context.record.customnumber1__c!=null)?((Math.abs(context.record.customnumber2__c)&gt;0)?Number(Number(((context.record.customnumber1__c)&gt;=0?Math.floor(context.record.customnumber1__c):Math.ceil(context.record.customnumber1__c))).toFixed(Math.abs(context.record.customnumber2__c)&lt;=20?Math.abs(context.record.customnumber2__c):20)):Math.round((((context.record.customnumber1__c)&gt;=0?Math.floor(context.record.customnumber1__c):Math.ceil(context.record.customnumber1__c)))*('1e'+Math.abs(context.record.customnumber2__c)))/('1e'+Math.abs(context.record.customnumber2__c))):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customnumber2__c!=null&amp;&amp;context.record.customnumber1__c!=null)?(((context.record.customnumber1__c.isPos()?context.record.customnumber1__c.toDP(18).floor():context.record.customnumber1__c.toDP(18).ceil())).mul('1e'+context.record.customnumber2__c.abs().toFixed(0)).round().div('1e'+context.record.customnumber2__c.abs().toFixed(0))):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>ROUND(CASE WHEN COALESCE($!s0s!$.customnumber1__c, 0)&gt;=0 THEN FLOOR(ROUND(COALESCE($!s0s!$.customnumber1__c, 0),33)) ELSE CEIL(ROUND(COALESCE($!s0s!$.customnumber1__c, 0),33)) END, ABS(COALESCE($!s0s!$.customnumber2__c, 0))::integer)</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>ROUND(CASE WHEN $!s0s!$.customnumber1__c&gt;=0 THEN FLOOR(ROUND($!s0s!$.customnumber1__c,33)) ELSE CEIL(ROUND($!s0s!$.customnumber1__c,33)) END, ABS($!s0s!$.customnumber2__c)::integer)</Sql>
       <Guard>null</Guard>
    </SqlOutput>
</testCase>

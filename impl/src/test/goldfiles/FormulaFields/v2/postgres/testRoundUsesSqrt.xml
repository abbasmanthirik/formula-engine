<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testRoundUsesSqrt">
    <JsOutput highPrec="true" nullAsNull="false">($F.Decimal.sqrt($F.nvl(context.record.customnumber1__c,new $F.Decimal('0')))).mul('1e'+$F.nvl(context.record.customnumber2__c,new $F.Decimal('0')).toFixed(0)).round().div('1e'+$F.nvl(context.record.customnumber2__c,new $F.Decimal('0')).toFixed(0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">($F.nvl(context.record.customnumber2__c,0)&gt;0)?Number(Number(Math.sqrt($F.nvl(context.record.customnumber1__c,0))).toFixed($F.nvl(context.record.customnumber2__c,0)&lt;=20?$F.nvl(context.record.customnumber2__c,0):20)):Math.round((Math.sqrt($F.nvl(context.record.customnumber1__c,0)))*('1e'+$F.nvl(context.record.customnumber2__c,0)))/('1e'+$F.nvl(context.record.customnumber2__c,0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customnumber1__c!=null&amp;&amp;context.record.customnumber2__c!=null)?((context.record.customnumber2__c&gt;0)?Number(Number(Math.sqrt(context.record.customnumber1__c)).toFixed(context.record.customnumber2__c&lt;=20?context.record.customnumber2__c:20)):Math.round((Math.sqrt(context.record.customnumber1__c))*('1e'+context.record.customnumber2__c))/('1e'+context.record.customnumber2__c)):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customnumber1__c!=null&amp;&amp;context.record.customnumber2__c!=null)?(($F.Decimal.sqrt(context.record.customnumber1__c)).mul('1e'+context.record.customnumber2__c.toFixed(0)).round().div('1e'+context.record.customnumber2__c.toFixed(0))):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>ROUND(SQRT(COALESCE($!s0s!$.customnumber1__c, 0)), COALESCE($!s0s!$.customnumber2__c, 0)::integer)</Sql>
       <Guard>COALESCE($!s0s!$.customnumber1__c, 0)&lt;0</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>ROUND(SQRT($!s0s!$.customnumber1__c), $!s0s!$.customnumber2__c::integer)</Sql>
       <Guard>$!s0s!$.customnumber1__c&lt;0</Guard>
    </SqlOutput>
</testCase>

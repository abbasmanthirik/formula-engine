<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testFormatDurationDateTime">
    <JsOutput highPrec="true" nullAsNull="false">(($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null&amp;&amp;($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null)?($F.formatduration(Math.abs((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/1000),true)):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null&amp;&amp;($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null)?($F.formatduration(Math.abs((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/1000),true)):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null&amp;&amp;($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null)?($F.formatduration(Math.abs((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/1000),true)):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null&amp;&amp;($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null)?($F.formatduration(Math.abs((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/1000),true)):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>EXTRACT(HOUR FROM (INTERVAL '1 second' * ABS((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric)))::int/24 || ':' || TO_CHAR(EXTRACT(HOUR FROM (INTERVAL '1 second' * ABS((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric)))::int%24,'FM09') || ':' || TO_CHAR((INTERVAL '1 second' * ABS((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric)), 'MI:SS')</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>EXTRACT(HOUR FROM (INTERVAL '1 second' * ABS((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric)))::int/24 || ':' || TO_CHAR(EXTRACT(HOUR FROM (INTERVAL '1 second' * ABS((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric)))::int%24,'FM09') || ':' || TO_CHAR((INTERVAL '1 second' * ABS((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric)), 'MI:SS')</Sql>
       <Guard>null</Guard>
    </SqlOutput>
</testCase>

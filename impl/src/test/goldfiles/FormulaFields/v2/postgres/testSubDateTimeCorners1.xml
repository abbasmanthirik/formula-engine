<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testSubDateTimeCorners1">
    <JsOutput highPrec="true" nullAsNull="false">(($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null&amp;&amp;($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null)?(((new $F.Decimal((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)).mul(new $F.Decimal('1440')).mul(new $F.Decimal('60')).isPos()?(new $F.Decimal((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)).mul(new $F.Decimal('1440')).mul(new $F.Decimal('60')).toDP(18).floor():(new $F.Decimal((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)).mul(new $F.Decimal('1440')).mul(new $F.Decimal('60')).toDP(18).ceil())):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null&amp;&amp;($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null)?(((((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)*1440*60)&gt;=0?Math.floor(((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)*1440*60):Math.ceil(((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)*1440*60))):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null&amp;&amp;($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null)?(((((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)*1440*60)&gt;=0?Math.floor(((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)*1440*60):Math.ceil(((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)*1440*60))):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c))!=null&amp;&amp;($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c))!=null)?(((new $F.Decimal((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)).mul(new $F.Decimal('1440')).mul(new $F.Decimal('60')).isPos()?(new $F.Decimal((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)).mul(new $F.Decimal('1440')).mul(new $F.Decimal('60')).toDP(18).floor():(new $F.Decimal((($F.anl([context.record.customdatetime1__c])?null:$F.parseDateTime(context.record.customdatetime1__c)).getTime()-($F.anl([context.record.customdatetime2__c])?null:$F.parseDateTime(context.record.customdatetime2__c)).getTime())/86400000)).mul(new $F.Decimal('1440')).mul(new $F.Decimal('60')).toDP(18).ceil())):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN ((((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric/86400) * 1440) * 60)&gt;=0 THEN FLOOR(ROUND(((((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric/86400) * 1440) * 60),33)) ELSE CEIL(ROUND(((((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric/86400) * 1440) * 60),33)) END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN ((((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric/86400) * 1440) * 60)&gt;=0 THEN FLOOR(ROUND(((((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric/86400) * 1440) * 60),33)) ELSE CEIL(ROUND(((((EXTRACT(EPOCH FROM $!s0s!$.customdatetime1__c)-EXTRACT(EPOCH FROM $!s0s!$.customdatetime2__c))::numeric/86400) * 1440) * 60),33)) END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
</testCase>

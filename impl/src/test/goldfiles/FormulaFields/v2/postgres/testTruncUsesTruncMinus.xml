<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testTruncUsesTruncMinus">
    <JsOutput highPrec="true" nullAsNull="false">(($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c.div(100)):null,new $F.Decimal('0'))).mul('1e'+$F.nvl(context.record.customnumber1__c,new $F.Decimal('0')).toFixed(0)).trunc().div('1e'+$F.nvl(context.record.customnumber1__c,new $F.Decimal('0')).toFixed(0))).mul('1e'+$F.nvl(($F.nvl(context.record.customcurrency1__c,new $F.Decimal('0')).sub($F.nvl(context.record.customcurrency2__c,new $F.Decimal('0')))),new $F.Decimal('0')).toFixed(0)).trunc().div('1e'+$F.nvl(($F.nvl(context.record.customcurrency1__c,new $F.Decimal('0')).sub($F.nvl(context.record.customcurrency2__c,new $F.Decimal('0')))),new $F.Decimal('0')).toFixed(0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">Math.trunc((Math.trunc(($F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c/100.0):null,0))*('1e'+$F.nvl(context.record.customnumber1__c,0)))/('1e'+$F.nvl(context.record.customnumber1__c,0)))*('1e'+$F.nvl(($F.nvl(context.record.customcurrency1__c,0)-$F.nvl(context.record.customcurrency2__c,0)),0)))/('1e'+$F.nvl(($F.nvl(context.record.customcurrency1__c,0)-$F.nvl(context.record.customcurrency2__c,0)),0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customcurrency1__c!=null&amp;&amp;context.record.customcurrency2__c!=null&amp;&amp;context.record.custompercent1__c!=null&amp;&amp;context.record.custompercent1__c/100.0!=null&amp;&amp;context.record.customnumber1__c!=null&amp;&amp;(context.record.customcurrency1__c-context.record.customcurrency2__c)!=null)?(Math.trunc((Math.trunc((context.record.custompercent1__c/100.0)*('1e'+context.record.customnumber1__c))/('1e'+context.record.customnumber1__c))*('1e'+(context.record.customcurrency1__c-context.record.customcurrency2__c)))/('1e'+(context.record.customcurrency1__c-context.record.customcurrency2__c))):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customcurrency1__c!=null&amp;&amp;context.record.customcurrency2__c!=null&amp;&amp;context.record.custompercent1__c!=null&amp;&amp;context.record.custompercent1__c.div(100)!=null&amp;&amp;context.record.customnumber1__c!=null&amp;&amp;(context.record.customcurrency1__c.sub(context.record.customcurrency2__c))!=null)?(((context.record.custompercent1__c.div(100)).mul('1e'+context.record.customnumber1__c.toFixed(0)).trunc().div('1e'+context.record.customnumber1__c.toFixed(0))).mul('1e'+(context.record.customcurrency1__c.sub(context.record.customcurrency2__c)).toFixed(0)).trunc().div('1e'+(context.record.customcurrency1__c.sub(context.record.customcurrency2__c)).toFixed(0))):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>TRUNC(TRUNC(COALESCE(($!s0s!$.custompercent1__c / 100.0), 0), COALESCE($!s0s!$.customnumber1__c, 0)::integer), COALESCE((COALESCE($!s0s!$.customcurrency1__c, 0)-COALESCE($!s0s!$.customcurrency2__c, 0)), 0)::integer)</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>TRUNC(TRUNC(($!s0s!$.custompercent1__c / 100.0), $!s0s!$.customnumber1__c::integer), ($!s0s!$.customcurrency1__c-$!s0s!$.customcurrency2__c)::integer)</Sql>
       <Guard>null</Guard>
    </SqlOutput>
</testCase>

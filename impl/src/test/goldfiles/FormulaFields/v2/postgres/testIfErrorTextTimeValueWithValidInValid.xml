<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testIfErrorTextTimeValueWithValidInValid">
    <JsOutput highPrec="true" nullAsNull="false">!(context.record.dateString__c!=null)?null:new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).toISOString().substring(11,23)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">!(context.record.dateString__c!=null)?null:new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).toISOString().substring(11,23)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">!(context.record.dateString__c!=null)?null:new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).toISOString().substring(11,23)</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">!(context.record.dateString__c!=null)?null:new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).toISOString().substring(11,23)</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN  NOT $!s0s!$.dateString__c ~ '^([01]\d|2[0-3]):[0-5][0-9]:[0-5][0-9]\.[0-9][0-9][0-9]$'  THEN NULL ELSE TO_CHAR(TO_TIMESTAMP(TO_CHAR(CAST(TO_CHAR(TO_TIMESTAMP($!s0s!$.dateString__c, 'HH24:mi:ss.MS'),'SSSS.MS') AS NUMERIC) * 1000/1000, 'FM99990D999'), 'SSSS.MS'), 'HH24:mi:ss.MS') END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN  NOT $!s0s!$.dateString__c ~ '^([01]\d|2[0-3]):[0-5][0-9]:[0-5][0-9]\.[0-9][0-9][0-9]$'  THEN NULL ELSE TO_CHAR(TO_TIMESTAMP(TO_CHAR(CAST(TO_CHAR(TO_TIMESTAMP($!s0s!$.dateString__c, 'HH24:mi:ss.MS'),'SSSS.MS') AS NUMERIC) * 1000/1000, 'FM99990D999'), 'SSSS.MS'), 'HH24:mi:ss.MS') END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
</testCase>

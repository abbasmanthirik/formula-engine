<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testSqrtUsesLog">
    <JsOutput highPrec="true" nullAsNull="false">($F.Decimal.sqrt(($F.nvl(context.record.customnumber1__c,new $F.Decimal('0'))).log(10))).mul('1e'+new $F.Decimal('15').toFixed(0)).round().div('1e'+new $F.Decimal('15').toFixed(0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">Number(Number(Math.sqrt(Math.log($F.nvl(context.record.customnumber1__c,0))/Math.LN10)).toFixed(15&lt;=20?15:20))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customnumber1__c!=null)?(Number(Number(Math.sqrt(Math.log(context.record.customnumber1__c)/Math.LN10)).toFixed(15&lt;=20?15:20))):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customnumber1__c!=null)?(($F.Decimal.sqrt((context.record.customnumber1__c).log(10))).mul('1e'+new $F.Decimal('15').toFixed(0)).round().div('1e'+new $F.Decimal('15').toFixed(0))):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>ROUND(SQRT(LOG(10, COALESCE($!s0s!$.customnumber1__c, 0))), 15::integer)</Sql>
       <Guard>COALESCE($!s0s!$.customnumber1__c, 0)&lt;=0 OR LOG(10, COALESCE($!s0s!$.customnumber1__c, 0))&lt;0</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>ROUND(SQRT(LOG(10, $!s0s!$.customnumber1__c)), 15::integer)</Sql>
       <Guard>$!s0s!$.customnumber1__c&lt;=0 OR LOG(10, $!s0s!$.customnumber1__c)&lt;0</Guard>
    </SqlOutput>
</testCase>

<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testCeilUsesSqrt">
    <JsOutput highPrec="true" nullAsNull="false">($F.Decimal.sqrt($F.nvl(context.record.customnumber1__c,new $F.Decimal('0'))).isPos()?$F.Decimal.sqrt($F.nvl(context.record.customnumber1__c,new $F.Decimal('0'))).toDP(18).ceil():$F.Decimal.sqrt($F.nvl(context.record.customnumber1__c,new $F.Decimal('0'))).toDP(18).floor())</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">((Math.sqrt($F.nvl(context.record.customnumber1__c,0)))&gt;=0?Math.ceil(Math.sqrt($F.nvl(context.record.customnumber1__c,0))):Math.floor(Math.sqrt($F.nvl(context.record.customnumber1__c,0))))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customnumber1__c!=null)?(((Math.sqrt(context.record.customnumber1__c))&gt;=0?Math.ceil(Math.sqrt(context.record.customnumber1__c)):Math.floor(Math.sqrt(context.record.customnumber1__c)))):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customnumber1__c!=null)?(($F.Decimal.sqrt(context.record.customnumber1__c).isPos()?$F.Decimal.sqrt(context.record.customnumber1__c).toDP(18).ceil():$F.Decimal.sqrt(context.record.customnumber1__c).toDP(18).floor())):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN SQRT(COALESCE($!s0s!$.customnumber1__c, 0))&gt;=0 THEN CEIL(ROUND(SQRT(COALESCE($!s0s!$.customnumber1__c, 0)),33)) ELSE FLOOR(ROUND(SQRT(COALESCE($!s0s!$.customnumber1__c, 0)),33)) END</Sql>
       <Guard>COALESCE($!s0s!$.customnumber1__c, 0)&lt;0</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN SQRT($!s0s!$.customnumber1__c)&gt;=0 THEN CEIL(ROUND(SQRT($!s0s!$.customnumber1__c),33)) ELSE FLOOR(ROUND(SQRT($!s0s!$.customnumber1__c),33)) END</Sql>
       <Guard>$!s0s!$.customnumber1__c&lt;0</Guard>
    </SqlOutput>
</testCase>

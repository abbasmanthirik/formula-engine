<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testDistance">
    <JsOutput highPrec="true" nullAsNull="false">typeof $formula==='undefined'?undefined:$formula.disance({latitude:$F.nvl(context.record.customNumber1__c,new $F.Decimal('0')),longitude:$F.nvl(context.record.customNumber2__c,new $F.Decimal('0'))},{latitude:new $F.Decimal('33.37088'),longitude:new $F.Decimal('122.61715').neg()},&quot;mi&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">typeof $formula==='undefined'?undefined:$formula.disance({latitude:$F.nvl(context.record.customNumber1__c,0),longitude:$F.nvl(context.record.customNumber2__c,0)},{latitude:33.37088,longitude:(-122.61715)},&quot;mi&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customNumber1__c!=null&amp;&amp;context.record.customNumber2__c!=null)?(typeof $formula==='undefined'?undefined:$formula.disance({latitude:context.record.customNumber1__c,longitude:context.record.customNumber2__c},{latitude:33.37088,longitude:(-122.61715)},&quot;mi&quot;)):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customNumber1__c!=null&amp;&amp;context.record.customNumber2__c!=null)?(typeof $formula==='undefined'?undefined:$formula.disance({latitude:context.record.customNumber1__c,longitude:context.record.customNumber2__c},{latitude:new $F.Decimal('33.37088'),longitude:new $F.Decimal('122.61715').neg()},&quot;mi&quot;)):null</JsOutput>
    <SqlOutput nullAsNull="false">
       <Sql>(CASE 'mi' WHEN 'mi' THEN 7917.522 WHEN 'km' THEN 12742.018 END*ASIN(SQRT((POWER(sin((COALESCE($!s0s!$.customNumber2__c, 0))*0.017453292519943295)*cos((COALESCE($!s0s!$.customNumber1__c, 0))*0.017453292519943295)- -0.70342048084620570,2)+POWER(cos((COALESCE($!s0s!$.customNumber2__c, 0))*0.017453292519943295)*cos((COALESCE($!s0s!$.customNumber1__c, 0))*0.017453292519943295)- -0.45015288660157460,2)+POWER(sin((COALESCE($!s0s!$.customNumber1__c, 0))*0.017453292519943295)- +0.55005636603021210,2)))/2))::numeric</Sql>
       <Guard>(-122.61715) &lt; -180 OR 180 &lt; (-122.61715) OR COALESCE($!s0s!$.customNumber1__c, 0) &lt; -90 OR 90 &lt; COALESCE($!s0s!$.customNumber1__c, 0) OR COALESCE($!s0s!$.customNumber2__c, 0) &lt; -180 OR 180 &lt; COALESCE($!s0s!$.customNumber2__c, 0) OR (COALESCE($!s0s!$.customNumber1__c, 0) IS NULL AND COALESCE($!s0s!$.customNumber2__c, 0) IS NOT NULL) OR (COALESCE($!s0s!$.customNumber1__c, 0) IS NOT NULL AND COALESCE($!s0s!$.customNumber2__c, 0) IS NULL)  OR 'mi' NOT IN ('mi','km')</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="true">
       <Sql>(CASE 'mi' WHEN 'mi' THEN 7917.522 WHEN 'km' THEN 12742.018 END*ASIN(SQRT((POWER(sin(($!s0s!$.customNumber2__c)*0.017453292519943295)*cos(($!s0s!$.customNumber1__c)*0.017453292519943295)- -0.70342048084620570,2)+POWER(cos(($!s0s!$.customNumber2__c)*0.017453292519943295)*cos(($!s0s!$.customNumber1__c)*0.017453292519943295)- -0.45015288660157460,2)+POWER(sin(($!s0s!$.customNumber1__c)*0.017453292519943295)- +0.55005636603021210,2)))/2))::numeric</Sql>
       <Guard>(-122.61715) &lt; -180 OR 180 &lt; (-122.61715) OR $!s0s!$.customNumber1__c &lt; -90 OR 90 &lt; $!s0s!$.customNumber1__c OR $!s0s!$.customNumber2__c &lt; -180 OR 180 &lt; $!s0s!$.customNumber2__c OR ($!s0s!$.customNumber1__c IS NULL AND $!s0s!$.customNumber2__c IS NOT NULL) OR ($!s0s!$.customNumber1__c IS NOT NULL AND $!s0s!$.customNumber2__c IS NULL)  OR 'mi' NOT IN ('mi','km')</Guard>
    </SqlOutput>
</testCase>

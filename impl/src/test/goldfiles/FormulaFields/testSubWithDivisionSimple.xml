<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testSubWithDivisionSimple">
   <testInstance formula="customnumber1__c/customnumber2__c - 1" returntype="Double" precision="12" scale="2">
    <SqlOutput nullAsNull="true">
       <Sql>((COALESCE($!s0s!$.customnumber1__c, 0)/COALESCE($!s0s!$.customnumber2__c, 0))-1)</Sql>
       <Guard>COALESCE($!s0s!$.customnumber2__c, 0)=0</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="false">
       <Sql>(($!s0s!$.customnumber1__c/$!s0s!$.customnumber2__c)-1)</Sql>
       <Guard>$!s0s!$.customnumber2__c=0</Guard>
    </SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">($F.nvl(context.record.customnumber1__c,new $F.Decimal('0')).div($F.nvl(context.record.customnumber2__c,new $F.Decimal('0'))).sub(new $F.Decimal('1')))</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customnumber1__c!=null&amp;&amp;context.record.customnumber2__c!=null)?((context.record.customnumber1__c.div(context.record.customnumber2__c).sub(new $F.Decimal('1')))):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(($F.nvl(context.record.customnumber1__c,0)/$F.nvl(context.record.customnumber2__c,0))-1)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customnumber1__c!=null&amp;&amp;context.record.customnumber2__c!=null)?(((context.record.customnumber1__c/context.record.customnumber2__c)-1)):null</JsOutput>
      <result>
      <inputvalues>[9,  9]</inputvalues>
         <formula>0</formula>
         <sql>0</sql>
         <javascript>0</javascript>
         <javascriptLp>0</javascriptLp>
         <formulaNullAsNull>0</formulaNullAsNull>
         <sqlNullAsNull>0</sqlNullAsNull>
         <javascriptNullAsNull>0</javascriptNullAsNull>
         <javascriptLpNullAsNull>0</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[9,  10]</inputvalues>
         <formula>-0.1</formula>
         <sql>-0.1</sql>
         <javascript>-0.1</javascript>
         <javascriptLp>-0.1</javascriptLp>
         <formulaNullAsNull>-0.1</formulaNullAsNull>
         <sqlNullAsNull>-0.1</sqlNullAsNull>
         <javascriptNullAsNull>-0.1</javascriptNullAsNull>
         <javascriptLpNullAsNull>-0.1</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[12,  11]</inputvalues>
         <formula>0.09090909090909090909090909090909</formula>
         <sql>0.0909090909090909</sql>
         <javascript>0.09090909090909091</javascript>
         <javascriptLp>0.0909091</javascriptLp>
         <formulaNullAsNull>0.09090909090909090909090909090909</formulaNullAsNull>
         <sqlNullAsNull>0.0909090909090909</sqlNullAsNull>
         <javascriptNullAsNull>0.09090909090909091</javascriptNullAsNull>
         <javascriptLpNullAsNull>0.0909091</javascriptLpNullAsNull>
      </result>
   </testInstance>
   <testInstance formula="customnumber2__c/customnumber1__c - 1" returntype="Double" precision="12" scale="2">
    <SqlOutput nullAsNull="true">
       <Sql>((COALESCE($!s0s!$.customnumber2__c, 0)/COALESCE($!s0s!$.customnumber1__c, 0))-1)</Sql>
       <Guard>COALESCE($!s0s!$.customnumber1__c, 0)=0</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="false">
       <Sql>(($!s0s!$.customnumber2__c/$!s0s!$.customnumber1__c)-1)</Sql>
       <Guard>$!s0s!$.customnumber1__c=0</Guard>
    </SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">($F.nvl(context.record.customnumber2__c,new $F.Decimal('0')).div($F.nvl(context.record.customnumber1__c,new $F.Decimal('0'))).sub(new $F.Decimal('1')))</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customnumber2__c!=null&amp;&amp;context.record.customnumber1__c!=null)?((context.record.customnumber2__c.div(context.record.customnumber1__c).sub(new $F.Decimal('1')))):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(($F.nvl(context.record.customnumber2__c,0)/$F.nvl(context.record.customnumber1__c,0))-1)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customnumber2__c!=null&amp;&amp;context.record.customnumber1__c!=null)?(((context.record.customnumber2__c/context.record.customnumber1__c)-1)):null</JsOutput>
      <result>
      <inputvalues>[ 9, 9]</inputvalues>
         <formula>0</formula>
         <sql>0</sql>
         <javascript>0</javascript>
         <javascriptLp>0</javascriptLp>
         <formulaNullAsNull>0</formulaNullAsNull>
         <sqlNullAsNull>0</sqlNullAsNull>
         <javascriptNullAsNull>0</javascriptNullAsNull>
         <javascriptLpNullAsNull>0</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[ 10, 9]</inputvalues>
         <formula>0.11111111111111111111111111111111</formula>
         <sql>0.1111111111111111</sql>
         <javascript>0.1111111111111111</javascript>
         <javascriptLp>0.1111111</javascriptLp>
         <formulaNullAsNull>0.11111111111111111111111111111111</formulaNullAsNull>
         <sqlNullAsNull>0.1111111111111111</sqlNullAsNull>
         <javascriptNullAsNull>0.1111111111111111</javascriptNullAsNull>
         <javascriptLpNullAsNull>0.1111111</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[ 11, 12]</inputvalues>
         <formula>-0.08333333333333333333333333333333</formula>
         <sql>-0.08333333333333333333</sql>
         <javascript>-0.08333333333333333</javascript>
         <javascriptLp>-0.0833333</javascriptLp>
         <formulaNullAsNull>-0.08333333333333333333333333333333</formulaNullAsNull>
         <sqlNullAsNull>-0.08333333333333333333</sqlNullAsNull>
         <javascriptNullAsNull>-0.08333333333333333</javascriptNullAsNull>
         <javascriptLpNullAsNull>-0.0833333</javascriptLpNullAsNull>
      </result>
   </testInstance>
</testCase>
